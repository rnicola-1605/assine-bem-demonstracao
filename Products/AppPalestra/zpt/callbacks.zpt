<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>Callbacks / Webhooks Recebidos</title>

    <script src="/js/jquery.min.js "></script>

    <!-- CSS only -->
    <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.2.0/dist/css/bootstrap.min.css" rel="stylesheet" integrity="sha384-gH2yIJqKdNHPEq0n4Mqa/HGKIhSkIHeL5AyhkYV8i59U5AR6csBvApHHNl/vI1Bx" crossorigin="anonymous">
    <style type="text/css">
        .json_render{
            width: 100%;
            background: 0 0;
            border: 1px solid;
            padding: 10px;
            min-height: 150px;
            font-size: 1.2rem;
            line-height: 1.2;
        }
    </style>
</head>
<body style="margin: 10px 20px">
    <div>
        <h1>Requisições recebidas:</h1>

        <textarea id="log_reqs" class="json_render" id="entrada" cols="30" rows="30" readonly="" ok="1" tal:content="context/obter_callbacks"></textarea>
    </div>
</body>
<footer>
    <script type="text/javascript">
        $(document).ready(function(){
            modulo_async.iniciar_processo();
        })
    </script>
    <script type="text/javascript">
        var modulo_async = {
            iniciar_processo: function(){
                setTimeout(function(){
                    modulo_async._async_requisicoes(5);
                }, 1000);
            },

            _async_requisicoes: async function(segundos){
                let controle_while = true;
                let requisita_a_cada = segundos;
                let elementos = null;

                while (controle_while){
                    try{
                        ferramentas_portal.ajax_macro(
                            'obter_callbacks',
                            null,
                            null,
                            function(retorno, parametros){
                                if (retorno){
                                    let ele_log = document.getElementById('log_reqs');
                                    ele_log.innerHTML = retorno;
                                }
                            },
                            null
                        )
                    } catch(e){
                        console.log(e);
                        // controle_while = false;
                    }

                    // Apos cada requisicao terminada, espera $requisita_a_cada segundos para requisitar novamente.
                    await new Promise(resolve => setInterval(() => {resolve(true)}, 1000 * requisita_a_cada));
                }
            },

        }
    </script>
    <script type="text/javascript">
        var ferramentas_portal = {
            obter_xmlhttp: function(){
                var xmlhttp = null;

                if (window.XMLHttpRequest) {
                    xmlhttp = new XMLHttpRequest();
                } else{
                    // Codigo para os browsers antigos (IE 5, IE 6 e etc...)
                    xmlhttp = new ActiveXObject("Microsoft.XMLHTTP");
                };

                return xmlhttp;
            },

            ajax_macro: function(url, form_data, ele_resultado, callback, paramcallback){
                var resposta = null;
                if (form_data == null || !(form_data)) form_data = new FormData();

                var xmlhttp = ferramentas_portal.obter_xmlhttp();
                xmlhttp.open("POST", url, true);

                xmlhttp.onload = function(){
                    resposta = this.responseText;
                    if (resposta && resposta.length > 0){
                        if (ele_resultado) $(ele_resultado).html(resposta);
                        if (callback) callback(resposta, paramcallback);
                    }else{
                        if (callback) callback(false);
                    }
                    return true;
                }

                xmlhttp.send(form_data);
            },
        }
    </script>
</footer>
</html>